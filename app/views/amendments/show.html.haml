- title "Amendment to #{@motion.title}"
- description "Amendment to #{ @motion.title } proposed by #{ @amendment.proposers.map(&:full_name).to_sentence } on #{ @amendment.occurred_on.strftime('%d/%m/%y') }."
- keywords "city council, motions, amendments, #{ @motion.tags.join(',') }"

%header.view-header
  .breadcrumbs
    .breadcrumbs_crumb= link_to @motion.meeting.title, meeting_path(meeting_type: @motion.meeting.meeting_type, occurred_on: @motion.meeting.occurred_on)
    .breadcrumbs_crumb= link_to truncate(@motion.title, length: 48), @motion
    .breadcrumbs_crumb
      %h1= link_to truncate(@amendment.body, length: 48), @amendment

.wrapper{role: 'layout'}
  .row
    .col-xs-3
      %section
        %main
          .box.-highlighted.-padded
            .text.-fixed Amendment to:
            .text.-display= @motion.title

      %section
        %main
          .box.-padded.-result{class: "-#{ @amendment.vote_result }"}
            .text
              :markdown
                **#{ @amendment.vote_result.capitalize }ed**
            .text by #{ @amendment.vote_method } vote.

      %section
        %header.subheader
          %h3 Proposers
        %main
          - if @amendment.proposers.any?
            %ul.list
              - @amendment.proposers.each do |councillor|
                %li
                  = link_to councillor do
                    .party-affiliated
                      .party-icon{style: "background-color: ##{ councillor.party_on(@amendment.occurred_on).colour_hex };", title: councillor.party_on(@amendment.occurred_on).name}
                      = councillor.full_name
          - else
            %p.empty (Not present)

    .col-xs-9
      - if @amendment.body.present?
        %section
          %header.subheader
            %h3 Text
          %main
            .text.-body
              :markdown
                #{ @amendment.body }

      - if @amendment.rollcall?
        %section
          %header.subheader
            %h3 Vote

        %main
          .breakdown
            .row
              - ['for', 'against', 'abstain'].each do |status|
                - votes = @amendment.votes.where(status: status)
                .col-xs-4.box.-delineated-h
                  .breakdown_item{class: "-#{ status }"}
                    %label= status
                    %big= votes.count

                  %ul.list.-small
                    - votes.by_councillor_name.each do |vote|
                      %li
                        = link_to vote.councillor do
                          .party-affiliated
                            .party-icon{style: "background-color: ##{ vote.councillor.party.colour_hex };", title: vote.councillor.party.name} &nbsp;
                            = vote.councillor.full_name
